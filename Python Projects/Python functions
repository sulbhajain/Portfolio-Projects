# -*- coding: utf-8 -*-
"""
Spyder Editor

This is a temporary script file.
"""

def centuryFromYear(year):
    return (year+99)// 100


def checkPalindrome(inputString):

    if inputString[::-1] == inputString:
        return True
    else:
        return False

def adjacentElementsProduct(inputArray):
    pos = 0
        
    if len(inputArray)==0: return 0
    if len(inputArray)==1: return inputArray[0]

    p= inputArray[0]*inputArray[1]
    
    for i in range(0, len(inputArray)-1):
        if inputArray[i]*inputArray[i+1] > p:
           pos = i
           p = inputArray[i]*inputArray[i+1]        
    return p

# return the area of the shape with n =1 1 box, , n=2: 1 box + sorrounded by 1 box on the edge
def shapeArea(n):
    return (n**2 + (n-1)**2)

# make a list of consicutive array 
def makeArrayConsecutive2(statues):
   return (max(statues)-min(statues)-len(statues)+1)


# function to return increasing sequence e.g. [1,3,2] = False, [1,2,1] = True
def almostIncreasingSequence(sequence):
    droppped = False
    last = prev = min(sequence) - 1
    for elm in sequence:
        if elm <= last:
            if droppped:
                return False
            else:
                droppped = True
            if elm <= prev:
                prev = last
            elif elm >= prev:
                prev = last = elm
        else:
            prev, last = last, elm
    return True
            
def matrixElementsSum(matrix):
    for i in range(len(matrix)):
        for j in range(len(matrix[i])):
            if matrix[i][j]==0:
                for k in range(i+1, len(matrix)):
                    print ("haunted", matrix[k][j])
                    matrix[k][j]=0
            
    print (matrix)          
    
    sum=0
    for i in range(len(matrix)):
        for j in range(len(matrix[i])):
            sum = sum + matrix[i][j]
    return sum

def isLucky(n):
    
    n_temp = str(n)
    l = len(n_temp)
    
    n1 ,n2 = n_temp[:l//2], n_temp[l//2:]
    return (sum(map(int, n1)) == sum(map(int, n2))
        
def commonCharacterCount(s1, s2):
   return (sum (min(s1.count(x), s2.count(x)) for x in set(s1)))
   

def sortByHeight(a):
    
    arr = sorted([b for b in a if b>0])
    
    for idx, val in enumerate(a):
        print (idx, val)
        if val ==-1:
            arr.insert(idx, val)
    return (arr)

def reverseParentheses(s):
    
    for i in range(len(s)):
        if s[i]=='[':
            start =i
        elif s[i]==']':
            end = i
            return (reverseParanthesis(s[:,start] + s[start+1:end][::-1]+s[end+1:]))
    
    return s

def alternatingSums(a):

    return [sum(a[::2]),sum(a[1::2])]